Data type :
	what will be size, type and default value of these variables?
		int,
		double,
		float,
		long,
		short,
		byte,
		boolean,
		char

	wap to create and print an int variable?
	wap to create and print a char variable?
	wap to create and print a float variable?
	wap to create and print a short variable?
	wap to create and print a boolean variable?
	wap to create and print a double variable?
	wap to create and print a long variable?


	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Type Casting:
	wap to create a char variable but assign an int value and print that variable?
	wap to create an int variable but assign a char value and print that variable?
	
	what will be the output?
	
	1.	
		int i = 19/5; 
		sop(i);
	2.  
		char a = 65;
		sop(a);
	3.
		int s = 'a';
		sop(s);
		

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	
Arithmetic Operation
	1.	wap to add two numbers?
	2.	wap to add three numbers?
	3.	wap to subtract two numbers?
	4.	wap to subtract three numbers?
	5.	wap to multiply two numbers?
	6.	wap to multiply three numbers?
	7.	wap to find remainder of a given numbers?
	8.	wap to find percentage?
	9.	wap to find average of 3 numbers?
	10.	wap to find average of 4 numbers?
	11.	wap to find average of 2 numbers?
	12.	what will be output: int x = 5 + 3 * 4 / 5 + 4;
	13.	what will be output: double x = 14 / 5 ;
	
	14.	int x = 15;
        int y = x % 4;
        int z = y * 24;
        System.out.println(z / 2);
	
	15.	int i = 34.0;
        int j = 7;
        int k = i % j;
        System.out.println("k = " + k );
	
	16.	int x = 42;
        double y = 42.25;
		System.out.println("x mod 10 = " + x % 10 );
        System.out.println("y mod 10 = " + y % 10 );
	
	17.	int a = 31, b = 40;
        int c = b - a;
        b = c % a;        
        b = b / a;        
        a = ++c;        
        b = (a - --b) * c;
	
	18.	int num = 69;
        int days = num % 30;
        int month = num / 30;
        System.out.println(month + " Month and " + days + " days");
	
	19.	int a = 56;
        int b = -8;
        int c = a % b;
        int d = b % a;
        System.out.println(c + ", " + d);
	
	20.	System.out.println(10 * 5 + 100 * (25 * 11) / (25 * 10) * 10 - 5 + 7 % 2);
		int zx = (10 * 5 + 100 * (25 * 11));
		int yz = ((25 * 10) * 10 - 5 + 7 % 2);
		System.out.println(zx / yz);
	
	21.	int a = 34;
        double d = 20.5;
        d+=a;
        a+=d;
        d-=a;
        a-=d;
        System.out.println(" d = " + ++d );
        System.out.println(" a = " + a-- );
	
	22.	int a = 4;
        a++;
        a += a;
        --a;
        a = 7 + a;
        a *= a;
        a -= 3;
		System.out.println(" a = " + a );
	
	23.	int a = 4;
        a -= 10;
        a = -a;
        a = 7 + a;
        System.out.println(" a = " + a );
        a %= a;
        a = a * a - 3 ;
        System.out.println(" a = " + a );
	
	24.	int a = -4;
		a=a+1;        
		a++;        
		a+=1;        
		++a; 
		System.out.println(" a = " + a );
	
	25.	short s = 10;
        int a = s;
        s += 10;
        System.out.println(s + "," + a);
	
	26.	short s = 10;
        int a = s;
        s = s + 10;
        System.out.println(s + "," + a);
	
	27.	int a = 0152;
        int b = --a / 2 * 2;
        System.out.println("a=" + a);
		

	
	28. wap to add two int variable but assign the result to double variable and print the result?
	
	29. wap to add two int variable but assign the result to float variable and print the result?
	
	30.	wap to add two char variable and store sum in char variable and print the result?
	
	31.	wap to add two float variable but assign the result to int variable and print the result?
	
	32.	wap to add two double variable but assign the result to int variable and print the result?
	

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Post/Pre Increment/Decrement

	1.	wap to do pre increment a number and assign its value to other number and print both number
	2.	wap to do post increment a number and assign its value to other number and print both number
	
	3.	wap to do pre increment a number and assign its value to other number and print both numbers, do assignment increment in same line
	4.	wap to do post increment a number and assign its value to other number and print both numbers, do assignment increment in same line
	
	5.	wap to pre increment a number n multiply with a number and assign product to a variable, print both variables
	6.	wap to post increment a number n multiply with a number and assign product to a variable, print both variables
	7.	Repeat all above operations with decrement operators too.
	
	8.	int a = 3;
		int b = ++a;
		what will be the value of a and b on printing
	
	9.	int a = -3;
		int b = a++;
		what will be the value of a and b on printing
	
	10.	int a = 3;
		int b = ++a;
		what will be the value of a and b on printing
	
	11.	int a = 3;
		int b = ++a + 9;
		what will be the value of a and b on printing
	
	12.	int a = 3;
		int b = a++ * 6;
		what will be the value of a and b on printing
	
	13.	int a = 3;
		int b = a++ / 3;
		what will be the value of a and b on printing
	
	14. int x = 10;
		int y = -2;
		int z = ++x * y++;
		sop(x);
		sop(y);
		sop(z);
	
	15. int x = 3;
		int y = 2;
		int z = x++ * y++;
		sop(x);
		sop(y);
		sop(z);

	16. int x = -1;
		int y = 2;
		int z = --x * y++;
		sop(x);
		sop(y);
		sop(z);

	17. int x = 0;
		int y = -2;
		int z = ++x * ++y;
		sop(x);
		sop(y);
		sop(z);

	18. int x = -3;
		int y = -2;
		int z = --x * y--;
		sop(x);
		sop(y);
		sop(z);

	19. int x = 10;
		int y = -2;
		int z = ++x + y++;
		sop(x);
		sop(y);
		sop(z);

	20. int x = 10;
		int y = -2;
		int z = ++x / y++;
		sop(x);
		sop(y);
		sop(z);


	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Relational Operator:

	1.	wap to compare two numbers and print the result, >, >=, <, <=, ==, !=
	
	2.	int a = 10;
        int b = a - 5;
        System.out.println(a <= b);
        System.out.println(a > b);
	3.	= is an assignment operator where as == is a relational operator ?
	4.	int a = 10;
        int b = 15;
        a++;
        b--;
        int c = b % a;
        System.out.println(c >= b);
		
	5.	int a = 10;
		boolean x = a++==10;
		boolean y = --a==10;
		sop(a);
		sop(x);
		sop(y);
	
	6.	int a = 10;
		int b = 3;
		boolean x = a++==10 && ++b==4;
		boolean y = --a==10 || b--<4;
		sop(a);
		sop(b);
		sop(x);
		sop(y);
	
	7.	int a = 10;
		int b = 3;
		boolean x = a++==10 && ++b==4;
		boolean y = --a==10 || b--<4;
		sop(a);
		sop(b);
		sop(x);
		sop(y);
		
	8.	int a = -4;
		int b = 0;
		boolean x = a< -5 && b==4;
		boolean y = --a > -6 || b-- < -1;
		sop(a);
		sop(b);
		sop(x);
		sop(y);
		
	9.	int a = -1;
		int b = 1;
		boolean x = ++a<=0 && ++b>1;
		boolean y = --a > -2 || b-- < 1;
		sop(a);
		sop(b);
		sop(x);
		sop(y);
		
	10.	int a = -1;
		boolean x = a!=-2 && ++a==0;
		sop(a);
		sop(x);
	
	11.	int x = 9;
		sop("result: "+(x==9 && ++x!=9)); 

	12. int x = -5;
		sop("result: "+(x==-5 && ++x>-5)); 
	
	13. int y = -1;
		int x = 5 * y++ ;
		sop(x);
		sop(y);
	
	14.	int y = -1;
		int x = -5 * ++y ;
		sop(x);
		sop(y);
		
	15.	int a=1, b=2, c=-3;
		int s = ++a + b-- + c%3 ;
		sop(a);
		sop(b);
		sop(c);
		sop(s);
	
	16.	int a=1, b=2, c=-3;
		int s = a++ + b-- - c++ ;
		sop(a);
		sop(b);
		sop(c);
		sop(s);
		
	17.	int a=1, b=2, c=-3;
		int s = a++ + b-- * c++ ;
		sop(a);
		sop(b);
		sop(c);
		sop(s);
		
	18.	boolean x = false, y = true;
		boolean r = x==false;
		boolean p = y!=true;
		sop(x);
		sop(r);
		sop(p);
		
	19.	boolean x = false, y = true;
		boolean r = x==true;
		boolean p = y==true;
		sop(x);
		sop(r);
		sop(p);

	20.	boolean x = false, y = true;
		boolean r = x==false && y!=true;
		sop(x);
		sop(y);
		sop(r);
		
	
	21.	boolean x = false, y = true;
		boolean r = x && y;
		sop(r);
		
		
	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Logical operation
	1.
		int a = 1;
		int b = 2;
		if(a==1 || ++b==3){
			sop("hello world");
		}
		what will be the value of a and b on printing
		
		
	2.	int a = 1;
		int b = 2;
		if(a==1 && ++b==3){
			sop("hello world");
		}
		what will be the value of a and b on printing
		
	3.	int a = 1;
		int b = 2;
		if(a!=1 || b++==3){
			sop("hello world");
		}
		what will be the value of a and b on printing
		
	4.	int a = 1;
		int b = 2;
		if(a!=1 && b++==3){
			sop("hello world");
		}
		what will be the value of a and b on printing
	
	5.	boolean a = true;
        boolean b = true;
        boolean c = true;
        boolean d = false;
        boolean e = a || !b || c || !d;
		print a, b, c, d and e
		
	6.	boolean lampX = false, result;
        boolean lampY = true;
        result = lampY && lampX;
        System.out.println("Lamp switch-on " + result);
        result = lampY & lampX;
        System.out.println("Lamp switch-on " + result);
		
	7.	boolean lampX = false, result;
        boolean lampY = true;
        result = lampY || lampX;
        System.out.println("Lamp switch-on " + result);
        result = lampY | lampX;
        System.out.println("Lamp switch-on " + result);
		
	8.	boolean lampX = false, result;
        boolean lampY = true;
        result = lampY || lampX;
        System.out.println("Lamp switch-on " + result);
        result = lampY && lampX;
        System.out.println("Lamp switch-on " + result);
		
	9.	boolean lampX = false, result;
        boolean lampY = true;
        result = lampY && lampX;
        System.out.println("Lamp switch-on " + result);
        result = lampY || result;
        System.out.println("Lamp switch-on " + result);
	
	10.	boolean lampX = false, result;
        boolean lampY = true;
        result = lampY || lampX;
        System.out.println("Lamp switch-on " + result);
        result = result && lampX;
        System.out.println("Lamp switch-on " + result);
		
	11.	int c = 0, d = 50, e = 50;
        boolean b = (c == 1) && (++e < 100);
        System.out.println("e = " + e);
        boolean f = (++e < 100) && (c == 1);
        System.out.println("e = " + e);
		
	12.	int c = 0, e = 50;
        boolean b = (c == 1) && (++e < 100);
        System.out.println("e = " + e);
        boolean f = (++e < 100) && (c == 1);
        System.out.println("e = " + e);
		
	13.	int c = 0, e = 50;
        boolean b = (c == 1) || (++e < 100);
        System.out.println("e = " + e);
        boolean f = (e++ < 100) || (c == 1);
        System.out.println("e = " + e);
		
	14.	int a = 15;
        int b = a + 5;
        int c = a + 10;
        int d = c % a;
        System.out.println(d);
	
	15.	double d1 = 21.5;
        double d2 = 0.5;
        boolean condition = ( d1 / d2 ) < 15;
        int result = condition ? 77 : 99;
        System.out.println("result = " + result);

	16.	int a = 27 / 4 + 9;
        int b = 52 / 6 - 3;
        int c = 3;
        c = a++ - b; 
        a = a * b; 
        b = b + a; 
        a = (a < c) ? a % c : c % a; 
        System.out.println("a = " + a + " b = " + b + " c = " + c);
		
	17.	int a = 7 * 3 + 24 / 3 - 5;
        int b = (7 * 3) + (24 / 3) - 5;
        System.out.print(a + ", " + b);
		
	18.	int x = 20;
        int y = 10;
        double z = x++ - y * 7 / --y + x * 10;
        System.out.println(z);

	19.	int x = 20;
        int y = 10;
        double z = x + y * 7 + y-- + x;
        System.out.println(z);
		
	20.	int x = 20;
        int y = 10;
        double z = (x + y) * 7 + (--y + x);
        System.out.println(z);
		
	21.	int c = 20;
        double kelvin = c + 273.15;
        System.out.println(kelvin);
        int Rankine = (int) (c + 273.15 * 9 / 5);
        System.out.println(Rankine);
        double delisle = (100 - c) * 3 / 2;
        System.out.println(delisle);
	
	22.	double f = 70;
        double kelvin = (f + 459.67) * 5 / 9;
        System.out.println((int) kelvin);
        double newton = (f - 32) * 11 / 60;
        System.out.println((int) newton);

	23.	boolean a, b, c;
        a = b = c = true;
		System.out.println("a = " + a + " b = " + b + " c = " + c);

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
Ternary:
	1.	wap to print greatest number among two given numbers( with if and without if).
	2.	wap to print smallest number among two given numbers( with if and without if).
	3.	wap to print negative number among two given numbers( with if and without if).
	4.	wap to print positive number among two given numbers( with if and without if).
	5.	wap to print even number among two given numbers( with if and without if).
	6.	wap to print odd number among two given numbers( with if and without if).
	

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	
if-else
	1.	wap to find which number is greater among two numbers
	2.	wap to find which number is greater among three numbers
	3.	wap to find a number is odd or even
	4.	wap to find a number is negative or positive or zero
	5.	wap to find whether a number is divisible by a given number completely.
	6.	wap to find a number is multiple of 10 or not
	7.	wap to find to find greatest among three numbers
	8.	wap to find divistion secured by a student
	9.	wap to for a given length and breadth of a rectangle check if it is square or not.
	10.	A school has following rules for grading system:
		a. Below 25 - F
		b. 25 to 45 - E
		c. 45 to 50 - D
		d. 50 to 60 - C
		e. 60 to 80 - B
		f. Above 80 - A
		provide marks and print the corresponding grade.
	
	11.	wap to find smallest number among 2 numbers
	12.	wap to find smallest number among 3 numbers
	13.	Write a program to check whether a given character is lowercase ( a to z ) or uppercase ( A to Z ).
		Hint: u can use ascii value to solve this issue
	
	14.	boolean a, b, c;
        a = b = c = true;
        if( !a || ( b && c ) )
        {
            System.out.println("If executed");
        }
        else
        {
            System.out.println("else executed");
        }
		
	15.	if( 1 > 2 )
        {
            System.out.println(" 1 is greater than 2");
        }
		
	16.	if( 1 < 2 )
        {
            System.out.println("1 is less than 2");
        }
        else
            System.out.println("2 is less than 1");
            System.out.println("Hello From IfExample");
       
	17.	int marks = 80;
        if( marks > 70 )
            System.out.println("Distinction");
        if( marks > 35 )
            System.out.println("Pass");
        else
            System.out.println("Fail");
            System.out.println("Better luck next time");
			
	19.	int a = 7 * 3 + 6 / 2 - 5;
        int b = 21 - 8 + a % 3 * 11;
        if(a < b)
        {
            System.out.println("A is less than B");
        }
        if(a = b)
        {
            System.out.println("A is equal to B");
        }
        if(a > b)
        {
            System.out.println("A is greater than B");
        }
		
	20.	int a = 12 + 21 * 3 - 9 / 2;
        int b = 14 - 32 * 4 + 175 / 8 - 3;
        if(++a > 71 && --b < 20)
        {
            System.out.println("a = " + a + " b = " + b);
        }
        if(b-- == -97 || a-- < 100)
        {
            System.out.println("a = " + a + " b = " + b);
        }
		
	21.	float fl = 5.3f;
        if (fl == 5.3)
            System.out.println("Both are equal");
        else
            System.out.println("Both are not equal");
			
	22.	int first = 10, second;
        if (first < 10)
            second = 1;
        if (first >= 10)
            second = 2;
        System.out.println("y is " + second);
		
	23.	int x = 20;
        int y = 25;
        if (++x < (y = y -= 4) || (x = x += 4) > y) {
            System.out.println(x + "," + y);
        }
		
	24.	int x = 20;
        int y = 25;
        if (++x < (y = y -= 4) || (x = x += 4) > y) {
            System.out.println(x + " " + y);
        }
		
	25.	boolean x = true;
        boolean y = false;
        if (x && y) {
            System.out.println(true);
        } else {
            System.out.println(false);
        }
		
	26.	boolean x = true;
        boolean y = false;
        if (x || y) {
            System.out.println(true);
        } else {
            System.out.println(false);
        }
		
	27.	float f = 75.0f;
        double d = 75.0;
        int i = 75;
        if( f == d )
        {
            if( f == i )
            {
                System.out.println("f, d and i are equal");
            }
            else
            {
                System.out.println("f, d are equal but i is not equal");
            }
        }
        else
        {
            System.out.println("f and d are not equal");
        }
	
	28.	boolean male = false;
        int age = 30;
        if( male )
            if( age < 20 )
                System.out.println("Boy");
            else
                System.out.println("Man");
        else
            if( age < 20 )
                System.out.println("Girl");
            else
                System.out.println("Woman");
				
	29.	int marks = 50;
        if( marks > 70 )
            System.out.println("Distinction");
        else if( marks > 35 )
            System.out.println("Pass");
        else
            System.out.println("Fail");
			
	30.	int marks = 80;
        if( marks > 70 )
        {
            System.out.println("Distinction");
            System.out.println("Congratulations");
        }
        else if( marks > 35 )
        {
            System.out.println("Pass");
        }
        else
        {
            System.out.println("Fail");
            System.out.println("Better luck next time");
        }
	
	31.	int marks = 50;
        if( marks >= 70 )
            System.out.println("Distinction");

        if( marks < 70 && marks >= 35 )
            System.out.println("Pass");

        if( marks < 35 )
            System.out.println("Fail");
			
	32.	boolean a=true, b = false;
		if (a) {
			System.out.println("A");
		} else if (a && b) {
			System.out.println("A && B");
		} else {
			if (!b) {
				System.out.println("notB");
			} else {
				System.out.println("ELSE");
			}
		}

	33. wap to find a given number is negative or not?
	34. wap to print zero if number zero, 1 if positive and -1 if number is negative
	35. wap to print odd if number is odd and even if number is even
	36. wap to check whether number is less than 100 or not
	37. wap to check whether number is between -100 to 50
	38. wap to print whether number is divisible by 3 or not
	39. wap to check whether number divisible by 7
	40. wap to print hi if number is zero and by if number is 100
	41. wap to print double if number is a double digit 
	42. wap to print single if number is single digit
	43. wap to print ternary if number is 3 digit
	44. wap to print 100 if number is between 100 to 200
	45. wap to find greatest number among two numbers
	46. wap to find greatest number among three numbers
	47. wap to find least number among two numbers  
	48. wap to find least number among three numbers
	49. wap to check whether a given character is capital 'A' or not 
	50. wap to print 'up' if any given character is upper case
	51. wap to print 'low' if any given character is lower case
	52. wap to print 'num' if any given character is char numeric e.g. '1' or any such given number
	53. wap to check whether a given number is positive and double digit or single digit number 
	54. wap to print kid if age<13, print teenage if age<18 and age>12, and adult if age>18
	55. wap to print 'capital' if given character is capital letter, else print 'small' if charater is in lower case
	56. wap to print all these on basis of give character value
		'A' -> Capital
		'a' -> small 
	57. wap to print alphabet if the given character is 'alphabet' else print 'non alphabet'
	58. wap to print 'number' if the given character is number else 'non number'
	59.	wap to print 'star' if the given character is * else print 'no star'
	60.	wap to print 'at the rate' if the given character is @ else print 'no rate'
	61.	wap to print 'hello world' if number is divisible by 3 and 5, print 'hello' if divisible by 3 only, print 'world' if number is divisible by 5.
	

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	
for/while loop
	1.	wap to print number from 1 to 10
	2.	wap to print number from 10 to 1
	3.	wap to print first five odd numbers.
	4.	wap to print first five even numbers.
	5.	wap to print to print all negative numbers between -1 and -10.
	6.	wap to print numbers which is completely divisible by 3 between 1 to 10.
	7.	wap to print numbers which is completely divisible by 10 between 1 to 100.
	8.	wap to print numbers which is completely divisible by 3 and 2 between 1 to 10.
	9.	wap to print numbers which is multiple of 3 between 1 to 22.
	10.	wap to print 5 times A.
	11.	wap to print 1 time a.
	12.	wap to print 15 times hello.
	13.	wap to print 10 times wolrd.
	14.	wap to print -10 to -1.
	15.	wap to print all even numbers between 100 to 120.
	16.	wap to print all odd numbers between 120 to 100.
	17.	wap to print all numbers between 30 to 50 those are not divisible by 7.
	18.	wap to print all numbers between 130 to 90 those are not divisible by 10.
	19.	wap to print all numbers between 30 to 80 those are divisible by 6 and 5.
	20.	wap to print all numbers between 10 to 50 those are divisible by 2 and 5.
	21.	wap to print all numbers between 10 to 50 those are divisible by 2 and 5.
	22.	wap to print all numbers between 10 to 70 those are not divisible by 3 and 5.
	23.	wap to print all numbers between 10 to 50 those are divisible by 5 and 9.
	24.	wap to print all numbers between 10 to 90 those are not divisible by 2 and 5.
	25.	wap to print all numbers between 100 to 1 those are not divisible by 11 and 3.
	26.	wap to print all numbers between 200 to 1 those are divisible by 13 and 2.
	27.	wap to print all numbers between 1 to 1500 those are divisible by 11 and 13.
	28.	wap to print all numbers between 10 to 300 those are divisible by 11 and 12.
	29.	wap to print all numbers between 100 to 1 those are divisible by 11 and 3.
	30.	wap to print all numbers between 1 to 150 multiple of 11.
	31.	wap to give a condition that loop may be rotate upto 10 but break loop when it rotates uptop 7 times.
	32. wap to print all lower case alphabets.
	33.	wap to print all upper case alphabets.
	34.	wap to print all upper case alphabets except vowels.
	34.	wap to print all lower case alphabets except vowels.
	35.	wap to print all lower case vowels.
	36.	wap to print all upper case vowels.
	37.	wap to print all numbers from 1 to 10 except 3 and 7.
	38.	wap to print all numbers from 1 to 10 except 2 and 5 and 8.
	39.	wap to print number from 50 to 45
	40.	wap to find factorial of a given number
	41.	wap to print fibonocci series
	42.	wap to find given number is prime or not
	43.	wap to reverse a number e.g ip=12345, op=54321 avoid zero
	44.	wap to find sum of a number e.g ip=1234,  op=10
	45.	wap to print patterns
	46.	Wap to print all natural numbers from 1 to n.
	47.	Wap to print all natural numbers in reverse (from n to 1).
	48.	Wap to print all alphabets from a to z.
	49.	Wap to print all even numbers between 1 to 100.
	50.	Wap to print all odd number between 1 to 100.
	51.	Wap to find sum of all natural numbers between 1 to n.
	52.	Wap to find sum of all even numbers between 1 to n.
	53.	Wap to find sum of all odd numbers between 1 to n.
	54.	Wap to print multiplication table of any number.
	55.	Wap to count number of digits in a number.
	56.	Wap to find first and last digit of a number.
	57.	Wap to find sum of first and last digit of a number.
	58.	Wap to swap first and last digits of a number.
	59.	Wap to calculate sum of digits of a number.
	60.	Wap to calculate product of digits of a number.
	61.	Wap to enter a number and print its reverse.
	62.	Wap to check whether a number is palindrome or not.
	63.	Wap to print all ASCII character with their values.
	64.	Wap to find power of a number using for loop.
	65.	Wap to calculate factorial of a number.
	66.	Wap to check whether a number is Prime number or not.
	67.	Wap to print all Prime numbers between 1 to n.
	68.	Wap to find sum of all prime numbers between 1 to n.
	69.	Wap to check whether a number is Armstrong number or not.
	70.	Wap to print all Armstrong numbers between 1 to n.
	71.	Wap to check whether a number is Perfect number or not.
	72.	Wap to print all Perfect numbers between 1 to n.
	73.	Wap to check whether a number is Strong number or not.
	74.	Wap to print all Strong numbers between 1 to n.
	75.	Wap to print Fibonacci series up to n terms.
	76.
		*
		**
		***
		****
	
	77.
		****
		***
		**
		*
		
	78.
		****
		 ***
		  **
		   *
		   
	79.
		    *
		   **
	      ***
	     ****
		 
	80.
		   *
		  * *
		 * * *
		* * * *

	81.
		* * * * *
		 * * * *
		  * * *
		   * *
		    *
	
	82.
		1
		1 2
		1 2 3
	
	83.
		1
		2 2
		3 3 3
		
	84.	
	         1
	       1 2
		 1 2 3
		 
		
	85.
			 1
	       2 2
		 3 3 3

	
	Star pattern programs - Wap to print the given star patterns.
	Number pattern programs - Wap to print the given number patterns.

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Array
	01) wap to create and print array using without loop
	02) wap to create and print array using loop
	03) wap to find length of an array
	04) wap to print only odd numbers from an array
	05) wap to print only even numbers from an array
	06) wap to print only positive number from an array
	07) wap to print only negative number from an array
	08) wap to print number divisible by given number from an array
	09) wap to print number not divisible by given number from an array
	10) wap to print array in reverse order
	11) wap to copy one array into other array
	12) wap to copy an array to another array in reverse order
	13) wap to find some of an array element
	14) wap to find greatest number from any array 
	15) wap to find smallest number among array element
	16) wap to reverse an array
	17) wap to copy two arrays into one array
	18) wap to add two array elements n copy into third array
	19) wap to find duplicate elements in an array? 
	20) wap to check whether two array are equal or not(means we have to check each element of two arrays)?
	21) wap to print all prime numbers from an array ?
	22) wap to calculate the factorial of each element of an array?
	23) wap to count occurrences of each element in an array?
	24) wap to remove duplicate elements from an array?
	25) wap to calculate the average value of array elements?
	26) wap to test if an array contains a specific value?
	27) wap to find the index of an array element(here u have to take any number and check that number is 
		present inside an array or not, 
	    if 	not print -1, if present then print its index means of of that element)?
	28) wap to remove a specific element from an array?
	29) wap to insert an element (specific position) into an array?
	30) wap to find the common elements between two arrays?
	31) wap to remove duplicate elements from an array?
	32) wap to find the second largest element in an array?
	33) wap to find the second smallest element in an array?
	34) wap to remove all zero element from an array?
	35) wap to check if an array of integers without 0 and -1?
	36) wap to remove the duplicate elements of a given array and return the new length of the 
		array.Sample array: [20, 20, 30, 40, 50, 50, 50]
		After removing the duplicate elements the program should return 4 as the new length of the array?
	37) wap to separate even and odd numbers of a given array of integers. Put all even numbers first, and 
		then odd numbers ?
	38) Find largest and smallest elements of an array? 
	39)	wap to subtract -1 from each element of an array 
	40)	wap to add 5 to each element of an array
	41) wap to convert an array of characters from upper case to lower case, e.g if arr[] = {'a', 'b', 'C'} 
		then after conversion final array should be arr[] = {'A', 'B', 'C'}
	42)	wap to convert an array of characters from lower case to upper case, e.g if arr[] = {'A', 'b', 'C'} 
		then after conversion final array should be arr[] = {'a', 'b', 'c'}
	43)	wap to multiply 3 to each element of an array
		Suppose given array is [10, 19, 2, 7] -> answer 30, 57, 6, 21
	44)	wap to to divide each element of an array by 2.
		Suppose given array is [10, 19, 2, 7] -> our program will divide each element by 2
		then answer should be 10/2, 19/2, 2, 7/2 = 5, 9, 3, 1
	45) wap to add all even numbers of an array and print the sum
		Suppose given array is [10, 19, 2, 7] -> sum=12 which is sum of 10 and 2, both are even
	46)	wap to add all odd numbers of an array and print the sum
		Suppose given array is [10, 19, 2, 7] -> sum=26 which is sum of 19 and 7, both are odd
	47)	wap to count all 1's of an int array
		Suppose given array is [10, 19, 2, 7] -> number of 1's here zero
		Suppose given array is [1, 19, 1, 7, 1, 3] -> number of 1's here 3
	48)	wap to count all 2's of an int array
		Suppose given array is [10, 19, 2, 7] -> number of 2's here one
		Suppose given array is [1, 19, 1, 7, 1, 3] -> number of 2's here 0
	49)	what ArrayIndexOutOfBoundsException ?	- theory, search in google
	50)	wap to find the largest and smallest number in an integer array
		Suppose given array is [100, 30, -20, 0] -> largest=100, smallest=-20
 	51) wap to count all prime numbers of an array?
		Suppose given array is [100, 19, 2, 7, 50] -> 19, 2, 7 are prime numbers so the count = 3
	52)	wap to add all elements of an array and check wether the sum is a prime number or not?
		Suppose given array is [10, 19, 2, 7] -> sum=38 is not a prime number
		Suppose given array is [10, 8, 2, 9] -> sum=29 is a prime number
	53)	wap to find whether an array of characters having 'a' or not?
		Suppose given array is ['a', '5', '7', 'p'] -> this array has 'a'
		Suppose given array is ['A', '5', '7', 'p'] -> this array doesn't have 'a'
	54)	wap to find whether an array of characters having 'Z' or not?
		Suppose given array is ['a', '5', '7', 'p'] -> this array doesn't have 'Z'
		Suppose given array is ['A', '5', 'Z', 'p'] -> this array has 'Z'
	55) wap to print all ascii value of character array
		Suppose given array is ['a', '5', '7', 'p'] -> answer would be : 97, 53, 55, 112
	56)	
		

	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	
String 
	1.	How to compare strings?
	2.	How to search last occurance of a substring inside a substring?
	3.	How to remove a particular character from a string?
	4.	How to replace a substring inside a string by another one ?
	5.	How to reverse a String?
	6.	How to search a word inside a string?
	7.	How to split a string into a number of substrings using space?
	8.	How to convert a string totally into upper case?
	9.	How to concatenate two strings?

	10.	WAP program to reverse word based on space
		a.	IP -   Hello world how are you
			OP -   you are how world Hello
		b.	IP -   Good morning
			OP -   morning Good
		c.  IP -   who is this
			OP -   this is who
	
	11.	Wap to convert String to char array 
	12.	Wap to convert char array to String
	13. Wap to remove all spaces from a string
	14. Wap to remove spaces those are present at starting and ending of a String
	15.	Wap to remove all integers from a String 
	16.	Wap to remove start from a String
	17.	Wap to remove all special characters from String(Note: accept alphabets lower case or upper case 
		all other characters are special characters). 
	18.	https://soshace.com/top-20-java-string-interview-questions-and-answers/
	19.	Wap to count each character except space
	20.	Wap to count the total number of vowels and consonants in a string
	21.	Wap to determine whether two strings are the anagram
	22.	Wap to divide String in 3 equal parts
		String s = "aaabbbccc";
	23.	Wap to remove all lower case letters
		String s = "aAzZXYcFEDgHIjklMNppc";
	24.	Wap to remove all upper case letters
		String s = "aAzZXYcFEDgHIjklMNppc";
	25.	Wap to determine whether a given string is palindrome
	26. Wap to remove duplicate characters
		String s = "abacddeffi";
		OP : "abcdefi"
	27.	Wap to convert String to int
	28. Wap to convert int to String
	29.	Wap to convert String to long
	30.	Wap to convert long to String
	31. Wap to convert String to float
	32.	Wap to convert float to String
	33. Wap to convert String to double
	34.	Wap to convert double to String
	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
	
	
Method
	void printNegative(int[])
		method will print all negative number from supplied array
	void printPositive(int[])
		method will print all positive number from supplied array
	void printEven(int[])
		method will print all even number from supplied array
	void printOdd(int[])
		method will print all odd number from supplied array
	void printNum(int[], int)
		method will print number if found in array negative number from supplied array
		e.g. if a[]={1,2,3} n b=2 then print 2
		if a[]={1,2,3} n b=5 then print not found, here 5 is not an array element
	void copy(int[], int[])
		copy first array to second array
	int[] copy(int[])
		create an array and copy supplied array and return that new array
	int sum(int[])
		find sum of all elements of an array and return sum
	int average(int[])
		find the average of array elements and return average
	int greatest(int[])
		find greatest element of an array and return that greatest value
	int smallest(int[])
		find smallest element of an array and return that smallest value
	int[] addTwoArrays(int[], int[]) - all array of same size
		add two supplied arrays elements and then copy the some of each element to 3rd array and 
		return 3rd array.
	int[] copyArrays(int[], int[]) - target array size = size of arr1 + size of arr2
		copy first array and second array to two third array.
	int add(int, int) - add two numbers and return sum
	int sub(int, int) - subtract two numbers and return result
	int mul(int, int) - multiply two numbers and return result
	int reminder(int, int) - find remainder and return 
	double div(int, int) - divide first argument with second argument and return the result
	double average(int, int, int) - find average of formal arguments and return result
	double percent(int, int, int, int, int)
		suppose 5 arguments are marks in subjects, each subject is of 100 marks,
		find percentage and return result
	long factorial(int)
		find factorial of given argument and return result
	boolean prime(int)
		check whether given number is prime or not and return true or false
	void fibonocci(int)
		print fibonacci series 
	void printIncrStar(int n)
		print star patter
	void printStarFromRight(int n)
		print star pattern from right
	void printStarReverse(int n)
		print star pattern in decrease order 
	void printStarReverseRight(int n)
		print star in decreasing order from right
	void diamond(int n)
		print diamond
	int countOnes(int a[])  a[] = {1,2,1,3,2,1,1,1};
		count number of times one in array and return count
	int countZero(int a[])  a[] = {1,0,1,0,0,1,1,0};
		count number of zeros and return 
	int checkChar(char c) 
		return 1 if argument is capital letter or -1 if lower case, 0 if not alphabet
	int[] countOneZero(int a[]) - a[] = {1,0,1,0,0,1,1};
		create an array having the count of zero and one in given array, 
		return zero and one count array.
		e.g the return array having r[] = {3, 4}
		a[] = {1,0,1,0,0,1,1}; - this array having 3 zeros and 4 ones
	char[] reverse(char[] src)
		create new array and copy the src array to new array in reverse order 
	char[] reverse(char[] src)
		reverse the same array and return.
				
			
	create a class name PatternPrinting
		create these methods
			void increasingStar(int)
			void decreasingStar(int)
			void increasingStarWithSpace(int)
			void decreasingStarWithSpace(int)
			void pyramid(int)
			void reversePyramid(int)
			void diamond(int)
			void numRow(int)
			void numColumn(int)
			
			Question 1
Write a program with a method named getTotal that accepts two integers as an argument and return its sum. Call this method from main( ) and print the results.
Show the answer.
import java.util.Scanner;

public class SumTwoNumber
{
    public static void main(String[] args)
    {
        Scanner console = new Scanner(System.in);
        int num1, num2;
        
        System.out.print("Enter first number: ");
        num1 = console.nextInt();
        
        System.out.print("Enter second number: ");
        num2 = console.nextInt();
        
        int sum = getTotal(num1, num2);
        
        System.out.println("Sum: " + sum);
    }

    public static int getTotal(int number1, int number2)
    {
        return number1 + number2;
    }
}


Question 2
Write a method named isEven that accepts an int argument. The method should return true if the argument is even, or false otherwise. Also write a program to test your method.
Show the answer.
import java.util.Scanner;

public class TestEven
{
    public static void main(String[] args)
    {
        Scanner console = new Scanner(System.in);
        int num;
        
        System.out.print("Enter an integer: ");
        num = console.nextInt();
                
        if(isEven(num))
        {
            System.out.println("Number is even");
        }
        else
        {
            System.out.println("Number is odd");
        }    
    }

    public static boolean isEven(int number)
    {
        if(number % 2 == 0)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

Question 3
Write a value-returning method, isVowel that returns the value true if a given character is a vowel, and otherwise returns false. In main() method accept a string from user and count number of vowels in that string.
Show the answer.
import java.util.Scanner;

public class TestEven
{
    public static void main(String[] args)
    {
        Scanner console = new Scanner(System.in);
        String sentence;
        
        System.out.print("Enter a string: ");
        sentence = console.nextLine();
        
        int count = 0;
        
        for(int i = 0; i < sentence.length(); i++)
        {
            if(isVowel(sentence.charAt(i)))
            {
                count++;
            }
        }
        
        System.out.println("Number of vowels: " + count);    
    }

    public static boolean isVowel(char letter)
    {
        switch(letter)
        {
            case 'a':
            case 'A':
            case 'e':
            case 'E':
            case 'i':
            case 'I':
            case 'o':
            case 'O':
            case 'u':
            case 'U':
                return true;
            default:
                return false;
        }
    }
}

Question 4
A prime number is a number that is evenly divisible only by itself and 1. For example, the number 5 is prime because it can be evenly divided only by 1 and 5. The number 6, however, is not prime because it can be divided evenly by 1, 2, 4, and 6.
Write a method named isPrime, which takes an integer as an argument and returns true if the argument is a prime number, or false otherwise. Also write main method that displays prime numbers between 1 to 500.
Show the answer.
public class PrimeNumbers
{
    public static void main(String[] args)
    {        
        for(int i = 1; i <= 500; i++)
        {
            if(isPrime(i))
            {
                System.out.print(i + " ");
            }
        }    
    }

    public static boolean isPrime(int number)
    {
        for(int i = 2; i < number; i++)
	{
	    if(number % i == 0)
            {
                return false;
            }
        }
        
        return true;
    }
}


Question 5
A nonnegative integer is called a palindrome if it reads forward and backward in the same way. For example, the numbers 5, 121, 3443, and 123454321 are palindromes. Write a method that takes as input a nonnegative integer and returns true if the number is a palindrome; otherwise, it returns false. Also write a program to test your method.
Show the answer.

import java.util.Scanner;

public class TestPalindrom
{
    public static void main(String[] args)
    {
        Scanner console = new Scanner(System.in);
     
        int num;

        System.out.print("Enter a number: ");
        num = console.nextInt();
        
        if(isPalindrom(num))
        {
            System.out.println("Number is palindrom");
        }
        else
        {
            System.out.println("Number is not palindrom");
        }
    }


    public static boolean isPalindrom(int number)
    {
        int temp = number;
        int remainder;
        int reverse = 0;
        
        while(temp > 0)
	{
            remainder = temp % 10;
            temp = temp / 10;
            reverse = reverse * 10 + remainder;
	}
        
        return reverse == number;
    }
}

6- What will be the output of the following program?
public class Madam
{
    public static void main(String[] args)
    {
        int a = 5;
        System.out.println(cube(a));
    }
    static int cube(int theNum)
    {
        return theNum * theNum * theNum;
    }
}

sulotion=125



7-What will be the output of the following program?
class Equation1
{
    public static void main(String s[])
    {
        int x = 6;
        int y = 3;
        int z = 12;

        int w = method1(x, y, z);
        
        System.out.println("w = " + w);
    }

    public static int method1(int y, int z, int x)
    {
        return (x * z) / y;
    }
}

solution=6
8- What will be the output of the following program?
class Equation1
{
    public static void main(String s[])
    {
        int x = 6;
        int y = 3;
        int z = 12;

        int w = method1(x, y, z);
        
        System.out.println("w = " + w);
    }

    public static int method1(int x, int y, int z)
    {
        return (x * z) / y;
    }
}
sulotion = 24



9- What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static int sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        return a + b;
    }
}
solution
a = 34 b = 56
c = 90



10- What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = 0;
        sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static int sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        int c = 0;
        c = a + b;
        System.out.println("c = " + c);
        return c;
    }
}
What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = 0;
        sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static int sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        int c = 0;
        c = a + b;
        System.out.println("c = " + c);
        return c;
    }
}

solution

a = 34 b = 56
c = 90
c = 0



11-
What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static int sum(int b, int a)
    {
        System.out.println("a = " + a + " b = " + b);
        return a + b;
    }
}
solution
a = 56 b = 34
c = 90

12- What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static int sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        int c = a + b
        return c;
    }
}

solution

Compilation Error


13-  What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = 0;
        sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static void sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        int c = a + b;
    }
}

solution


a = 34 b = 56
c = 0


14- What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        int a = 34;
        int b = 56;
        int c = 0;
        sum(a, b);
        System.out.println("c = " + c);
    }
    
    public static void sum(int a, int b)
    {
        System.out.println("a = " + a + " b = " + b);
        c = a + b;
    }
}

solution
Compilation Error




15- What will be the output of the following program.
class MethodsTest
{
    public static void main(String s[])
    {
        float m = 34;
        float n = 56;
        float o = sum(m, n);
        System.out.println("o = " + o);
    }
    
    public static void sum(float m, float n)
    {
        System.out.println("m = " + m + " n = " + n);
        return m + n;
    }
}
solution 
Compilation Error
qestion 4
A prime number is a number that is evenly divisible only by itself and 1. For example, the number 5 is prime because it can be evenly divided only by 1 and 5. The number 6, however, is not prime because it can be divided evenly by 1, 2, 4, and 6.
Write a method named isPrime, which takes an integer as an argument and returns true if the argument is a prime number, or false otherwise. Also write main method that displays prime numbers between 1 to 500.
Show the answer.
public class PrimeNumbers
{
    public static void main(String[] args)
    {        
        for(int i = 1; i <= 500; i++)
        {
            if(isPrime(i))
            {
                System.out.print(i + " ");
            }
        }    
    }

    public static boolean isPrime(int number)
    {
        for(int i = 2; i < number; i++)
	{
	    if(number % i == 0)
            {
                return false;
            }
        }
        
        return true;
    }
}


	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------
			

Class:
	1.	Create a class Company having member variables companyId, name, description. create getters and 
		setters for all member variables. Create object of Company class in other class inside main method
		and set all member values and print all member values using getters.
	
	2.	Create a class Presentation having member variables presentationId, bookedCompanyId, bookedRoomId, startTime, endTime. Create getters and setters for all member variables. Create object of Presentation class in other class inside main method and set all member values and print all member values using getters.
		
	3.	Create a class Room having member variables roomId, floorNum, seatCapacity. create getters and 
		setters for all member variables. Create object of Room class in other class inside main method
		and set all member values and print all member values using getters.
	
	4.	Create a class Attendee having member variables attendeeId, firstName, lastName, phone, email, vip. create getters and setters for all member variables. Create object of Attendee class in other class inside main method and set all member values and print all member values using getters.
	
	5.	Create a class PresentationAttendance having member variables ticketId, presentationId, attendeeId. create getters and setters for all member variables. Create object of PresentationAttendance class in other class inside main method and set all member values and print all member values using getters.
	
	6.	Create a class Employee having member variables id, employeeName, employeeNum, dateHired, cityId. create getters and setters for all member variables. Create object of Employee class in other class inside main method and set all member values and print all member values using getters.
	
	7.	Create a class SalariedEmployee having member variables id, annualSalary, employeeId. create getters and setters for all member variables. Create object of SalariedEmployee class in other class inside main method and set all member values and print all member values using getters.
	
	8.	Create a class City having member variables id, city. create getters and 
		setters for all member variables. Create object of City class in other class inside main method
		and set all member values and print all member values using getters.
		
	9.	Create a class HourlyEmployee having member variables id, annualSalary, employeeId . create getters and setters for all member variables. Create object of HourlyEmployee class in other class inside main method and set all member values and print all member values using getters.
	
	10.	Create a class OrderItems having member variables orderId, productId, quantity. create getters and 
		setters for all member variables. Create object of OrderItems class in other class inside main method and set all member values and print all member values using getters.
		
	11.	Create a class Orders having member variables id, userId, status, createdAt. create getters and 
		setters for all member variables. Create object of Orders class in other class inside main method
		and set all member values and print all member values using getters.
		
	12.	Create a class Users having member variables id, fullName, email, gender, dateOfBirth, countryCode, createdAt. create getters and setters for all member variables. Create object of Users class in other class inside main method and set all member values and print all member values using getters.
	
	13.	Create a class Merchants having member variables id, merchantName, adminId, countryCode, createdAt. create getters and setters for all member variables. Create object of Merchants class in other class inside main method and set all member values and print all member values using getters.
	
	14.	Create a class Products having member variables id, merchantId, name, price, status, createdAt. create getters and setters for all member variables. Create object of Products class in other class inside main method and set all member values and print all member values using getters.
	
	15.	Create a class Countries having member variables code, name, continentName. create getters and 
		setters for all member variables. Create object of Countries class in other class inside main method and set all member values and print all member values using getters.
		
	16.	Create a class Brands having member variables id, brandName, thumbnails. create getters and 
		setters for all member variables. Create object of Brands class in other class inside main method
		and set all member values and print all member values using getters.
		
	17.	Create a class Categorys having member variables id, categoryName, thumbnails. create getters and 
		setters for all member variables. Create object of Categorys class in other class inside main method and set all member values and print all member values using getters.
		
	18.	Create a class Stuff having member variables id, stuffName, thumbnails. create getters and 
		setters for all member variables. Create object of Stuff class in other class inside main method
		and set all member values and print all member values using getters.
		
	19.	Create a class BaseRelationTable having member variables id, brandsId, categoryId, collectionId. create getters and setters for all member variables. Create object of BaseRelationTable class in other class inside main method and set all member values and print all member values using getters.
	
	20.	Create a class Pattern having member variables id, optionName. create getters and 
		setters for all member variables. Create object of Pattern class in other class inside main method
		and set all member values and print all member values using getters.
		
	21.	Create a class Product having member variables id, productName, description, baseRelationTable, patternId. create getters and setters for all member variables. Create object of Product class in other class inside main method and set all member values and print all member values using getters.
	
	22.	Create a class ProductOptionRelation having member variables productId, optionId. create getters and setters for all member variables. Create object of ProductOptionRelation class in other class inside main method and set all member values and print all member values using getters.
	
	23.	Create a class Finish having member variables id, finishName. create getters and 
		setters for all member variables. Create object of Finish class in other class inside main method
		and set all member values and print all member values using getters.
	
	24.	Create a class ProductVariant having member variables variantId, productId, finishId, colorsId, metadata, thumbnails. create getters and setters for all member variables. Create object of ProductVariant class in other class inside main method and set all member values and print all member values using getters.
	
	25.	Create a class OptionTable having member variables id, optionName. create getters and setters for all member variables. Create object of OptionTable class in other class inside main method and set all member values and print all member values using getters.
	
	26.	Create a class OptionValues having member variables id, optionId, valueName. create getters and setters for all member variables. Create object of OptionValues class in other class inside main method and set all member values and print all member values using getters.
	
	27.	Create a class Colors having member variables id, colorName. create getters and 
		setters for all member variables. Create object of Colors class in other class inside main method
		and set all member values and print all member values using getters.
	
	28.	Create a class Dimensions having member variables id, dimensionValue. create getters and 
		setters for all member variables. Create object of Dimensions class in other class inside main method
		and set all member values and print all member values using getters.
	
	29.	Create a class DimensionHasProductVariant having member variables dimensionId, productId, variantId. create getters and setters for all member variables. Create object of DimensionHasProductVariant class in other class inside main method and set all member values and print all member values using getters.
	
	30.	Create a class VariantValue having member variables productId, optionId, valueId, dimensionId, variantId, price, sku. create getters and setters for all member variables. Create object of VariantValue class in other class inside main method and set all member values and print all member values using getters.
	
	31.	Create a class Customers having member variables customerId, firstName, lastName, class, doorNum, address1, address2, city, state, postalcode, country, phone, email, voiceMail, password, creditCard, creditCardTypeId, cardExpMonth, cardExpYr, billingAddress, billingCity, billingRegion, billingPostalcode, billingCountry, shipAddress, shipCity, shipRegion, shipPostalcode, shipCountry, dateEntered. create getters and setters for all member variables. Create object of Customers class in other class inside main method and set all member values and print all member values using getters.
		
	32.	Create a class Suppliers having member variables supplierId, companyName, contact_fName, contact_lName, contact_title, address1, address2, city, state, postalcode, country, phone, fax, email,
	url, paymentMethods, discountType, typeGoods_, notes, discountAvailabe, currentOrder, logo, customerId. create getters and setters for all member variables. Create object of Suppliers class in other class inside main method and set all member values and print all member values using getters.
						
	33.	creat a class having name Pattern, then add methods to print all patterns like increaseStar, decreaseStar, increaseStartFromRight, decreaseStartFromRight, diamond, pyramid, reversePyramid.
	All these methods will accept one int argument and will not return anything.
	
	34. create a class of name Arithmetic, add methods like add, sub, div, prod, fibonacci, prime, factorial. Plz make these methods return type and arguments according to your wish.
	
	35. create a class ArrayOperation and add methods like int[] copy(int[] a), int[] reverse(int[] b), 
	int[] addTwoArrays(int[] a, int[] b), void print(int[] p), int sumArray(int a[]), 
	int findMax(int[] a), int findMin(int[] a), int countNegative(int a[]), int countPositive(int a[]),  
	
	
	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	
	
Date :
	1.	Wap to create and print java.util.Date object;
	2.	Wap to create and print java.sql.Date object;
	3.	Wap to convert java.util.Date to java.util.Date object;
	4.	Wap to convert String to Date
	5.	Wap to convert Date to String
	6.	Wap to get year from current date https://www.javatpoint.com/java-date-getyear-method
	7.	Wap to create LocalDateTime and print its value
	8.	Wap to convert LocalDateTime to MM-dd-yyyy String format and print
	9.	Wap to convert LocalDateTime to dd-MM-yyyy String format and print
	10.	Wap to convert LocalDateTime to MM/dd/yyyy String format and print
	11.	Wap to convert LocalDateTime to dd/MM/yyyy String format and print
	12.	Wap to convert String stringDate = "31/12/1998"; to Date object.
	13.	Wap to convert String stringDate = "31-12-1998"; to Date object.	
	14.	Wap to convert String stringDate = "12/31/1998"; to Date object.
	15.	Wap to convert String stringDate = "12-31-1998"; to Date object.
	16. Wap to find the difference in days, months and years between two dates
		String sd1 = "31/12/1998";
		String sd2 = "31/12/1990";
	17. Wap to find the difference in days, months and years between two dates
		String sd1 = "01/02/1990";
		String sd2 = "17/01/2000";
	18. Wap to find the difference in days, months and years between two dates
		String sd1 = "13/10/1987";
		String sd2 = "11/08/1999";
	
	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

	

ArrayList :
	1.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	2.	create a class Student having fields id, name, dob, email, schoolId. Create an array list of User class and 
		add 4 user objects inside the list.

	3.	create a class School having fields schoolId, name, registrationDate, medium, address. Create an array list
		of 	User class and add 6 user objects inside the list.

	4.	create a class Teacher having fields id, TeacherId, name, dob, email, schoolId, fatherName. 
		Create an array list of User class and add 7 user objects inside the list.

	5.	create a class Car having fields CarId, model, company, engine, color, type. 
		Create an array list of User class and  add 5 user objects inside the list.

	6.	create a class Employee having fields id, name, dob, email, designation, joiningDate, resigned 		
		companyName. Create an array list of User class and  add 10 user objects inside the list.

	7.	create a class Employee having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	8.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	9.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	10.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	11.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	12.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	13.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	14.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	15.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.

	16.	create a class User having fields id, name, dob, email. Create an array list of User class and 
		add 5 user objects inside the list.


	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------


Model and Dto class
	1.	create a model class User having fields id, name, dob, email
		create a dto class UserDto having fields id, name, dob, email
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.
	
	2.	create a model class Student having fields id, name, dob, email, schoolId
		create a dto class StudentDto having fields id, name, dob, email, schoolId
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.
	
	3.	create a model class School having fields schoolId, name, registrationDate, medium, address
		create a dto class SchoolDto having fields schoolId, name, registrationDate, medium, address
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	4.	create a model class Teacher having fields id, TeacherId, name, dob, email, schoolId, fatherName
		create a dto class TeacherDto having fields id, TeacherId, name, dob, email, schoolId, fatherName
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	5.	create a model class Car having fields CarId, model, company, engine, color, type
		create a dto class CarDto having fields CarId, model, company, engine, color, type
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	6.	create a model class Country having fields countryId, name, independenceDate, email, phoneCode, republicDate
		create a dto class CountryDto having fields countryId, name, independenceDate, email, phoneCode, republicDate
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	7.	create a model class State having fields stateId, countryId, name, stateCode
		create a dto class StateDto having fields stateId, countryId, name, stateCode
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	8.	create a model class City having fields cityId, countryId, stateId, name, cityCode
		create a dto class CityDto having fields cityId, countryId, stateId, name, cityCode
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	9.	create a model class Street having fields streetId, cityId, countryId, stateId, name, address, postcode
		create a dto class StreetDto having fields streetId, cityId, countryId, stateId, name, address, postcode
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	10.	create a model class Student having fields id, name, dob, email
		create a dto class StudentDto having fields id, name, dob, email
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	11.	create a model class Student having fields id, name, dob, email
		create a dto class StudentDto having fields id, name, dob, email
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	12.	create a model class Student having fields id, name, dob, email
		create a dto class StudentDto having fields id, name, dob, email
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.

	13.	create a model class Student having fields id, name, dob, email
		create a dto class StudentDto having fields id, name, dob, email
		copy from model to dto class manually as well as automatically using dozerbeanmapper class and print.



	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------


Abstract class:

	NANR - method neither return nor accept any argument
	ANR - method will not return but accept any argument
	NAR - method will return but not accept any argument
	AR - method will return and accept argument
	
	ABS -> abstract method
	CON -> conrete method
	
	create and extends abstract class
	1.	Person having abstract methods
		job, salary, designation -> NANR, ABS
	2.	CollegeDetails
		feesStructure, duration, specialization ->  NANR, ABS
		name -> NAR, CON
	3.	Language
		locale, standard -> NANR, ABS
	4.	Animal
		
		
	


	-------------------------------------------------------------------------------------------------------
				-------------------------------------------------------------------------------------------------------

Interface:
	implement these interfaces 
	1.	public interface Series{
			public void fibonocci();
			public void pell();
			public void square();
			public void cube();
			public void firstTenNaturalNum();
			public void firstTenEvenNum();
			public void firstTenOddNum();
			public void printNumBetween90N100();
		}
	2.	public interface StringOperation {
			public void reverse(String);
			public void upperCase(String);
			public void lowercase(String);
			public void palindrome(String);
			public void removeDuplicateChar(String);
			public void removeAllSpaces(String);
			public void removeFirstSpace(String);
			public void removeLastSpace(String);
			public void removeAllNum(String);
			public void removeAllSpecialChar(String);
			public void removeLeadingTrailingSpaces(String);
		}

				


1. Create a class with a method that prints "This is super class" and its subclass with another method that prints "This is sub class".
	Now, create an object for each of the class and call
		1 - method of superclass by object of parent class
		2 - method of subclass class by object of subclass class
		3 - method of superclass class by object of subclass class

2. Create a class with a constructor that prints "This is a constructor of super class" and its subclass with its own constructor that
prints "This is a constructor of subclass". Now, create the following objects and print the output in the console.
		1 - An object of the superclass using the subclass
		2 - An object of the superclass using the superclass itself
		3 - An object of the subclass using the subclass itself

3. Create a class with an field with integer value and its subclass with another field with integer value. Now, create object of each class and call
		
		1 - field of the superclass using the subclass
		2 - field of the superclass using the superclass itself
		3 - field of the subclass using the subclass itself

4. Create a class with a method print() that prints a message, and a subclass with a method with the same method signature as well that prints another message,
Now, create an object of each class and call
		1 - method of superclass by object of parent class
		2 - method of subclass class by object of subclass class
		3 - method of superclass class by object of subclass class 
	
5. Show the output	
	class A {
		public void print() {
			System.out.println("print output from A");
		}
	}
	
	class B extends A {
		public void print() {
			System.out.println("print output from B");
		}
	}
	
	class C extends B {
		public void print() {
			System.out.println("print output from C");
		}
	}

	class MainClass {
		public static void main(String[] args) {

			A obj1 = new A();
			A obj2 = new B();
			B obj3 = new B();
			B obj4 = new C();

			obj1.print();
			obj2.print();
			obj3.print();
			obj4.print();
			
		}
	}
	

6. What's the output of this:
	
	class A {
		int i = 10;
	}
	
	class B extends A {
		int i = 20;
	}

	class MainClass {
		public static void main(String[] args) {

			A a = new A();
			A b = new B();
			B c = new B();

			System.out.println(a.i);
			System.out.println(b.i);
			System.out.println(c.i);
		}
	}
	
	
7. What's the output of this:
	
	class A {
		public A() {
			System.out.println("Class A Constructor");
		}
	}
	
	class B extends A {
		public B() {
			System.out.println("Class B Constructor");
		}
	}

	class MainClass {
		public static void main(String[] args) {

			A a = new A();
			A b = new B();
			B c = new B();

		}
	}
	
8. You have these two classes:
	
	class First {
		public static void printFirst() {
			System.out.println("First class");
		}
	}
	
	class Second extends First {
		public static void printSecond() {
			System.out.println("Second class");
		}
	}

	class MainClass {
		public static void main(String[] args) {
			A.printA();
			A.printB();
			B.printA();
			B.printB();
		}
	}

9. Show the output

	class A {
	
		int i = 1212;
	}
	 
	class B extends A {
	{
		A a;
	 
		public B(A a)
		{
			this.a = a;
		}
	}
	 
	public class MainClass
	{
		public static void main(String[] args)
		{
			A a = new A();
	 
			B b = new B(a);
	 
			System.out.println(a.i);
	 
			System.out.println(b.i);
	 
			System.out.println(b.a.i);
	 
			b.a.i = 2121;
	 
			System.out.println("--------");
	 
			System.out.println(a.i);
	 
			System.out.println(b.i);
		}
	}		
		Answer :
			1212
			1212
			1212
			——–
			2121
			1212

		
10. What will be the output:
	
	public class A {
		int methodOfA(int i) {
		
			i /= 10;

			return i;
		}
	}
	
	class B extends A {
		int methodOfB(int i) {
		
			i *= 20;

			return methodOfA(i);
		}
	}

	class MainClass {
		public static void main(String[] args) {

			B b = new B();

			System.out.println(b.methodOfB(100));

		}
}

11. You have these two classes:

	class BaseClass() {
		
		private void show() {
			System.out.println("base class");
		}
	}
	
	class DerivedClass() extends BaseClass {
		
		public void show() { 
			System.out.println("derived class");
		}
	}

create an object of each class. What will be the output and why?
	
12. You have these two classes:

	class TheBase() {
		
		final void show() {
			System.out.println("base class");
		}
	}
	
	class TheBranch() extends TheBase {
		
		public void show() {
			System.out.println("branch class");
		}
	}

create an object of each class. What will be the output and why?

13. What's the output of this:
	class Grandparent {
		public void Print() {
			System.out.println("Grandparent's Print()");
		}
	}
  
	class Parent extends Grandparent {
		public void Print() {
			System.out.println("Parent's Print()");
		}
	}
	  
	class Child extends Parent {
		public void Print() {
			super.super.Print(); 
			System.out.println("Child's Print()");
		}
	}
	  
	public class Main {
		public static void main(String[] args) {
			Child c = new Child();
			c.Print();
		}
	}

14. Create a class named 'Member' which has the following member variables:
	name, age, nationality, salary
	Then create two classes 'Manager' and 'Employee' and both extend 'Member' class. Manager class has member variable 'department' and employee has
	member variable 'specialization'. 
		1 - Create an object for Employee and object for manager
		2 - Assign name, age, nationality, salary and specialization to the employee object
		3 - Assign name, age, nationality, salary and department to the manager object

15. Create a class named 'Shape' with a method to print "This is This is shape". Then create two other classes named 'Rectangle', 'Circle' inheriting
the Shape class, both having a method to print "This is rectangular shape" and "This is circular shape" respectively. 
Create a class 'Square' extending 'Rectangle' with a method to print "Square is a rectangle".
Now call the method of 'Shape' and 'Rectangle' class by the object of 'Square' class.


	-------------------------------------------------------------------------------------------------------

Collection

1.	Convert integer array to integer list
	int[] a = {1, 2, 3, 4, 5, 6, 7, 8};
	
2.	Convert String to char array
	String s = "Hello, Hi, How are you"
	
3.	Convert char array to String
	char[] a = {'a', 'd, 'c', 'b', 'a', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};

4.	Convert char array to char list 
	char[] a = {'a', 'd, 'c', 'b', 'a', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};
	
5.	Convert char array to char list and but dont copy character 'a' to list
	char[] a = {'a', 'd, 'c', 'b', 'a', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};

6.	Convert integer array to String list
	int[] a = {1, 2, 3, 4, 5, 6, 7, 8};

7.	Convert String list to integer list
	List<String> stringList = Arrays.asList(new String[]{"123", "12", "35", "54", "66", "77", "55", "221", "33"});
	
8.	Create a new String list and add these two list to newly created string list. 
	List<String> stringList = Arrays.asList(new String[]{"123", "12", "35", "54", "66", "77", "55", "221", "33"});
	List<String> stringList = Arrays.asList(new String[]{"123", "j", "1", "*", "a", "j", "dd", "a", "a"});

9.	Please read about Collections and Arrays util class.

10.	Difference between Collections and Collection ?

11. What is link list?

12. LinkList vs ArrayList?
13.	When will use LinkList and when we will use ArrayList ?
14.	Create a set of String 
15.	Create a set of character
16. Create a set of boolean
17. Create a set of float 
18. Create a set of int
19.	Describe Set internal implementation ?
20. Create a map of key int and value also int
21.	Create a map of key int and value String
22.	Create a map of key String and value also String	
23.	Create a map of key String and value int
24.	Create a map of key int and value char
25.	Create a map of key char and value int
26.	Create a model class (POJO), name of the class: Student having two member fields id and name.
	Create two constructor 1. zero parameter constructor, 2. 2 arguments constructor 
	Create a list of Student class then sort the list once using id and once using name separately.
	For sorting please try to use both way of comparator implemention
	1. Class will implement comparator interface and will override using name and id respectively
	2. Using lambda function 
	
27. Create a model class (POJO), name of the class: Employee having two member fields designation and name.
	Create two constructor 1. zero parameter constructor, 2. 2 arguments constructor 
	Create a list of Student class then sort the list once using designation and once using name separately.
	For sorting please try to use both way of comparator implemention
	1. Class will implement comparator interface and will override using name and designation respectively
	2. Using lambda function 

28.	Create a model class (POJO), name of the class: User having two member fields userId and email.
	Create two constructor 1. zero parameter constructor, 2. 2 arguments constructor 
	Create a list of Student class then sort the list once using userId and once using email separately.
	For sorting please try to use both way of comparator implemention
	1. Class will implement comparator interface and will override using email and userId respectively
	2. Using lambda function 

29.	Create a model class (POJO), name of the class: ProjectManager having two member fields project and team.
	Create two constructor 1. zero parameter constructor, 2. 2 arguments constructor 
	Create a list of ProjectManager class then sort the list once using project and once using team separately.
	For sorting please try to use both way of comparator implemention
	1. Class will implement comparator interface and will override using team and project respectively
	2. Using lambda function 

30.	Create a model class (POJO), name of the class: Book having two member fields author and subject.
	Create two constructor 1. zero parameter constructor, 2. 2 arguments constructor 
	Create a list of Book class then sort the list once using author and once using subject separately.
	For sorting please try to use both way of comparator implemention
	1. Class will implement comparator interface and will override using subject and author respectively
	2. Using lambda function 

31.	What is hash ?
32.	Methods inside Object class specially equal and hash method, and toString method.
33. Can we use our class as a key in map ?
34. If yes then what would be the criteria to make a class suitable for key in map ?
35. Difference between hashmap and hashtable
36. Difference between array and arraylist 

37.	Create a list not having duplicate values from given list 
	List<Integer> ss = Arrays.asList(new Integer[]{1, 2, 3, 5, 5, 1, 0, -1, -2, -3, 1, 0, -1, -3});

38. Create a list not having duplicate values from given list
	List<String> stringList = Arrays.asList(new String[]{"abc", "xyz", "abcd", "abc", "hello", "world", "bike", "ant", "world"});

39. Create a list not having duplicate values from given list
	List<Character> ss = Arrays.asList(new Character[]{'1', '2', '2', '2', '@', '#', 'O', 'o', '0', '3', '1', '?', '*', 'o', 'e'});
40. Create a list not having duplicate values from given list
	List<Double> ss = Arrays.asList(new Double[]{4.5, 3.2, 6.5, 99.0, 33.21, 5.53, 4.33, 4.5, 3.2, 6.5, 1.1, 1.2, 4.4});
	
	-------------------------------------------------------------------------------------------------------
		
JDBC:
	company ( company_id, name, description, primary_contact_attendee_id)
	presentation ( presentation_id, booked_company_id, booked_room_id, start_time, end_time )
	room ( room_id, floor_num, seat_capacity )
	attendee ( attendee_id, first_name, last_name, phone, email, vip )
	presentation_attendance ( ticket_id, presentation_id, attendee_id )
	
	employee ( id, employee_name, employee_num, date_hired, city_id )
	salaried_employee ( id, annual_salary, employee_id )
	city ( id, city )
	hourly_employee ( id, hourly_rate, employee_id )
	
	order_items ( order_id, product_id, quantity )
	orders ( id, user_id, status, created_at )
	users ( id, full_name, email, gender, date_of_birth, country_code, created_at )
	merchants ( id, merchant_name, admin_id, country_code, created_at )
	products ( id, merchant_id, name, price, status, created_at )
	countries ( code, name, continent_name )
	
	brands ( id, brand_name, thumbnails )
	categorys ( id, category_name, thumbnails )
	collections ( id, collection_name, thumbnails )
	base_relation_table ( id, brands_id, category_id, collection_id)
	pattern ( id, option_name )
	product ( id, product_name, description, base_relation_table, pattern_id )
	product_option_relation ( product_id, option_id )
	finish ( id, finish_name )
	product_variant ( variant_id, product_id, finish_id, colors_id, metadata, thumbnails )
	option_table ( id, option_name )
	option_values ( id, option_id, value_name )
	colors ( id, color_name )
	dimensions ( id, dimension_value )
	dimension_has_product_variant ( dimension_id, product_id, variant_id )
	variant_value ( product_id, option_id, value_id, dimension_id, variant_id, price, sku )
	
	customers ( customer_id, first_name, last_name, class, door_num, address1 address2, city, state, postalcode,
                country, phone, email, voice_mail, password, credit_card, credit_card_type_id, card_exp_month,
                card_exp_yr, billing_address, billing_city, billing_region, billing_postalcode, billing_country, ship_address, ship_city, ship_region, ship_postalcode, ship_country, date_entered )				
	suppliers ( supplier_id, company_name, contact_f_name, contact_l_name, contact_title,
				address1, address2, city, state, postalcode, country, phone, fax, email,
				url, payment_methods, discount_type, type_goods_, notes, discount_availabe,
				current_order, logo, customer_id )
	

jvm:
	jconsole 
		to run this in cmd type jconsole and enter
	
	visualgc
	
	